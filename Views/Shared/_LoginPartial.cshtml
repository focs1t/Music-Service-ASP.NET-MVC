@using Microsoft.AspNetCore.Identity
@using CourseWork.Areas.Identity.Data

@inject SignInManager<CourseWorkUser> SignInManager
@inject UserManager<CourseWorkUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (User.IsInRole("user"))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="" asp-controller="Playlists" asp-action="UserPlaylists" title="Manage">@UserManager.GetUserName(User)</a>
            </li>
        }
        @if (User.IsInRole("admin") || User.IsInRole("moderator"))
        {
            <li class="nav-item">
                <a id="manage" class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy" title="Manage">@UserManager.GetUserName(User)</a>
            </li>
        }
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Выйти</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Регистрация</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Авторизация</a>
    </li>
}
</ul>
