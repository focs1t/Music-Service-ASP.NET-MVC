// <auto-generated />
using System;
using CourseWork.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseWork.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240528101956_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CourseWork.Models.Albums", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("artistsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("genresId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("artistsId");

                    b.HasIndex("genresId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("CourseWork.Models.Artists", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("CourseWork.Models.Comments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("albumsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("albumsId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CourseWork.Models.Concerts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("toursId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("toursId");

                    b.ToTable("Concerts");
                });

            modelBuilder.Entity("CourseWork.Models.Genres", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("CourseWork.Models.Playlists", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("CourseWork.Models.Tours", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("artistsId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("artistsId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("CourseWork.Models.Tracks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("albumsId")
                        .HasColumnType("int");

                    b.Property<int?>("artistsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("genresId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("albumsId");

                    b.HasIndex("artistsId");

                    b.HasIndex("genresId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("CourseWork.Models.TracksPlaylists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("playlistsId")
                        .HasColumnType("int");

                    b.Property<int?>("tracksId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("playlistsId");

                    b.HasIndex("tracksId");

                    b.ToTable("TracksPlaylists");
                });

            modelBuilder.Entity("CourseWork.Models.Albums", b =>
                {
                    b.HasOne("CourseWork.Models.Artists", "artists")
                        .WithMany("albums")
                        .HasForeignKey("artistsId");

                    b.HasOne("CourseWork.Models.Genres", "genres")
                        .WithMany("albums")
                        .HasForeignKey("genresId");

                    b.Navigation("artists");

                    b.Navigation("genres");
                });

            modelBuilder.Entity("CourseWork.Models.Comments", b =>
                {
                    b.HasOne("CourseWork.Models.Albums", "albums")
                        .WithMany("comments")
                        .HasForeignKey("albumsId");

                    b.Navigation("albums");
                });

            modelBuilder.Entity("CourseWork.Models.Concerts", b =>
                {
                    b.HasOne("CourseWork.Models.Tours", "tours")
                        .WithMany("concerts")
                        .HasForeignKey("toursId");

                    b.Navigation("tours");
                });

            modelBuilder.Entity("CourseWork.Models.Tours", b =>
                {
                    b.HasOne("CourseWork.Models.Artists", "artists")
                        .WithMany("tours")
                        .HasForeignKey("artistsId");

                    b.Navigation("artists");
                });

            modelBuilder.Entity("CourseWork.Models.Tracks", b =>
                {
                    b.HasOne("CourseWork.Models.Albums", "albums")
                        .WithMany("tracks")
                        .HasForeignKey("albumsId");

                    b.HasOne("CourseWork.Models.Artists", "artists")
                        .WithMany("tracks")
                        .HasForeignKey("artistsId");

                    b.HasOne("CourseWork.Models.Genres", "genres")
                        .WithMany("tracks")
                        .HasForeignKey("genresId");

                    b.Navigation("albums");

                    b.Navigation("artists");

                    b.Navigation("genres");
                });

            modelBuilder.Entity("CourseWork.Models.TracksPlaylists", b =>
                {
                    b.HasOne("CourseWork.Models.Playlists", "playlists")
                        .WithMany()
                        .HasForeignKey("playlistsId");

                    b.HasOne("CourseWork.Models.Tracks", "tracks")
                        .WithMany()
                        .HasForeignKey("tracksId");

                    b.Navigation("playlists");

                    b.Navigation("tracks");
                });

            modelBuilder.Entity("CourseWork.Models.Albums", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("tracks");
                });

            modelBuilder.Entity("CourseWork.Models.Artists", b =>
                {
                    b.Navigation("albums");

                    b.Navigation("tours");

                    b.Navigation("tracks");
                });

            modelBuilder.Entity("CourseWork.Models.Genres", b =>
                {
                    b.Navigation("albums");

                    b.Navigation("tracks");
                });

            modelBuilder.Entity("CourseWork.Models.Tours", b =>
                {
                    b.Navigation("concerts");
                });
#pragma warning restore 612, 618
        }
    }
}
